<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.strangeman.classmates.dao.ClassmateMapper">
  <resultMap id="BaseResultMap" type="com.strangeman.classmates.bean.Classmate">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="clazz" jdbcType="VARCHAR" property="clazz" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="permission" jdbcType="INTEGER" property="permission" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="last_modify_time" jdbcType="VARCHAR" property="lastModifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.strangeman.classmates.bean.ClassmateWithBLOBs">
    <result column="photo_wall" jdbcType="LONGVARCHAR" property="photoWall" />
    <result column="customize_filed" jdbcType="LONGVARCHAR" property="customizeFiled" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, school, clazz, name, owner_id, cover, permission, create_time, last_modify_time
  </sql>
  <sql id="Blob_Column_List">
    photo_wall, customize_filed
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.strangeman.classmates.bean.ClassmateExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from classmate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.strangeman.classmates.bean.ClassmateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classmate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.strangeman.classmates.bean.ClassmateExample">
    delete from classmate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.strangeman.classmates.bean.ClassmateWithBLOBs">
    insert into classmate (id, school, clazz, 
      name, owner_id, cover, 
      permission, create_time, last_modify_time, 
      photo_wall, customize_filed)
    values (#{id,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{clazz,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, 
      #{permission,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, #{lastModifyTime,jdbcType=VARCHAR}, 
      #{photoWall,jdbcType=LONGVARCHAR}, #{customizeFiled,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.strangeman.classmates.bean.ClassmateWithBLOBs">
    insert into classmate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="clazz != null">
        clazz,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="permission != null">
        permission,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastModifyTime != null">
        last_modify_time,
      </if>
      <if test="photoWall != null">
        photo_wall,
      </if>
      <if test="customizeFiled != null">
        customize_filed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null">
        #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null">
        #{lastModifyTime,jdbcType=VARCHAR},
      </if>
      <if test="photoWall != null">
        #{photoWall,jdbcType=LONGVARCHAR},
      </if>
      <if test="customizeFiled != null">
        #{customizeFiled,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.strangeman.classmates.bean.ClassmateExample" resultType="java.lang.Long">
    select count(*) from classmate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update classmate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.clazz != null">
        clazz = #{record.clazz,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.cover != null">
        cover = #{record.cover,jdbcType=VARCHAR},
      </if>
      <if test="record.permission != null">
        permission = #{record.permission,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifyTime != null">
        last_modify_time = #{record.lastModifyTime,jdbcType=VARCHAR},
      </if>
      <if test="record.photoWall != null">
        photo_wall = #{record.photoWall,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.customizeFiled != null">
        customize_filed = #{record.customizeFiled,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update classmate
    set id = #{record.id,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      clazz = #{record.clazz,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=VARCHAR},
      permission = #{record.permission,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      last_modify_time = #{record.lastModifyTime,jdbcType=VARCHAR},
      photo_wall = #{record.photoWall,jdbcType=LONGVARCHAR},
      customize_filed = #{record.customizeFiled,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update classmate
    set id = #{record.id,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      clazz = #{record.clazz,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      cover = #{record.cover,jdbcType=VARCHAR},
      permission = #{record.permission,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      last_modify_time = #{record.lastModifyTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>